name: tests

on:
  push:
    branches:
      - master
    tags-ignore:
      - '**'
  pull_request:

jobs: # Docs: <https://help.github.com/en/articles/workflow-syntax-for-github-actions>
  phpunit:
    name: Run application tests and checks
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 # Action page: <https://github.com/shivammathur/setup-php>
        with:
          php-version: 7.4

      - name: Start PostgreSQL server
        run: |
          docker run --rm -d \
            -p "5432:5432/tcp" \
            -e "POSTGRES_DB=forge" \
            -e "POSTGRES_USER=forge" \
            -e "POSTGRES_PASSWORD=forge" \
            postgres:13.1-alpine

      - name: Get Composer Cache Directory # Docs: <https://git.io/JfAKn#php---composer>
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies # Docs: <https://git.io/JfAKn#php---composer>
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.setup }}-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress --ansi

      - name: Execute application analyse
        run: composer analyse

      - name: Execute application tests
        run: composer test
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 5432

  #docker-image:
  #  name: Build docker image
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Check out code
  #      uses: actions/checkout@v2
  #
  #    - name: Build image
  #      run: docker build --tag "app:local" -f ./Dockerfile .
